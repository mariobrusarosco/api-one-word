generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Member {
  id           String         @id @default(uuid())
  userId       String         @unique
  firstName    String
  lastName     String
  email        String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  TableProfile TableSeat[]
  messages     Message[]
}

model TableSeat {
  id        String    @unique @default(uuid())
  role      TableRole @default(GUEST)
  memberId  String
  tableId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  member    Member    @relation(fields: [memberId], references: [userId], onDelete: Cascade)
  table     Table     @relation(fields: [tableId], references: [id], onDelete: Cascade)
  tempId    String?

  @@index([memberId])
  @@index([tableId])
}

model Table {
  id         String         @id @default(uuid())
  name       String
  inviteCode String         @unique
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  seats   TableSeat[]
  channels   Channel[]
}

model Channel {
  id        String    @id @default(uuid())
  name      String
  tableId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  table     Table     @relation(fields: [tableId], references: [id], onDelete: Cascade)
  messages  Message[]

  @@index([tableId])
}

model Message {
  id        String      @id @default(uuid())
  content   String
  channelId String
  memberId  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  channel   Channel     @relation(fields: [channelId], references: [id], onDelete: Cascade)
  member    Member      @relation(fields: [memberId], references: [userId], onDelete: Cascade)

  @@index([channelId])
  @@index([memberId])
}

enum TableRole {
  ADMIN
  MODERATOR
  GUEST
}
